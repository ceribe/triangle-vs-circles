local consts = require "constants"
local gs = require "game_state"

local score = 0

function init(self)
	msg.post(".", "acquire_input_focus")
	msg.post("@render:", "use_fixed_fit_projection", { near = -1, far = 1 })
	msg.post("@render:", "clear_color", { color = vmath.vector4(0.7, 0.7, 0.7, 0) } )

	self.save_file_path = sys.get_save_file("flappy_burrito", "save_file")
	self.save = sys.load(self.save_file_path)
	self.save.highscore = self.save.highscore or 0
	msg.post("/gui#gui", "update_highscore", { highscore = self.save.highscore })
end

function on_message(self, message_id, message, sender)
	if message_id == hash("add_point") and gs.state == GS_PLAYING then
		score = score + 1
		msg.post("/gui#gui", "update_score", { score = score })
	elseif message_id == hash("player_died") then
		gs.state = GS_PLAYER_DIED
		msg.post("/gui#gui", "game_finished")

		if score > self.save.highscore then
			self.save.highscore = score 
		end
		sys.save(self.save_file_path, self.save)
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") and action.pressed and gs.state == GS_BEFORE_START then
		gs.state = GS_PLAYING
		msg.post("/gui#gui", "game_started")
	elseif action_id == hash("touch") and action.pressed and gs.state == GS_PLAYER_DIED then
		score = 0
		gs.reset()
		msg.post("/player#collisionobject", "enable")
		msg.post("gui#gui", "game_restarted", { highscore = self.save.highscore })
	end
end
