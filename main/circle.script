local consts = require "constants"
local gs = require "game_state"

function hslToRgb(h, s, l)
	h = h / 360
	s = s / 100
	l = l / 100

	local r, g, b;

	if s == 0 then
		r, g, b = l, l, l; -- achromatic
	else
		local function hue2rgb(p, q, t)
			if t < 0 then t = t + 1 end
			if t > 1 then t = t - 1 end
			if t < 1 / 6 then return p + (q - p) * 6 * t end
			if t < 1 / 2 then return q end
			if t < 2 / 3 then return p + (q - p) * (2 / 3 - t) * 6 end
			return p;
		end

		local q = l < 0.5 and l * (1 + s) or l + s - l * s;
		local p = 2 * l - q;
		r = hue2rgb(p, q, h + 1 / 3);
		g = hue2rgb(p, q, h);
		b = hue2rgb(p, q, h - 1 / 3);
	end

	if not a then a = 1 end
	return r, g, b
end

function getRandomColor() 
	local h = math.random(0, 360)
	local r, g, b = hslToRgb(h, 67, 50)
	return vmath.vector4(r, g, b, 1)
end

function init(self)
	local color = getRandomColor()
	go.set("#sprite", "tint", color)
	msg.post("#dynamic_collisionobject", "disable")
	self.speed = vmath.vector3(math.random(-100, 100), math.random(-200, -50), 0)
end

function update(self, dt)
	if gs.state == GS_PLAYER_DIED then
		msg.post("#dynamic_collisionobject", "enable")
	end
	local pos = go.get_position()
	pos = pos + self.speed * dt

	if pos.x < consts.min_x then
		pos.x = 2 * consts.min_x - pos.x
		self.speed.x = -self.speed.x
	elseif pos.x > consts.max_x then
		pos.x = consts.max_x - (pos.x - consts.max_x)
		self.speed.x = -self.speed.x
	end
	
	go.set_position(pos)

	if pos.y < 184 then
		go.delete()
		msg.post("/main_go#main", "add_point")
	end
end
